message Imu_Accel_Gyro {
  required double AccelX = 1;
  required double AccelY = 2;
  required double AccelZ = 3;
  required double GyroX = 4;
  required double GyroY = 5;
  required double GyroZ = 6;
  required int32 timer = 7;
}

message CommandMsg {
  required double Accel = 1;
  required double Phi = 2;
}

message CommandReply {
}

message msg_Matrix {
  required uint32 rows = 1;
  required uint32 cols = 2;
  repeated double data = 3 [packed=true];
}

message msg_ControlCommand {
  required double force = 1;
  required double phi = 2;
  required double curvature = 3;
  required double dt = 4;
  required double time = 5;
  required msg_Matrix torque_3d = 6;
}

message msg_VehicleState {
   required msg_Matrix pose_7d = 1;
   required msg_Matrix vel_3d = 2;
   required msg_Matrix w_3d = 3;
   required double curvature = 4;
   required double steering = 5;
   required double time = 6;
   required int32 source = 7;
}

message msg_MotionSample {
    repeated msg_VehicleState states = 1;
    repeated msg_ControlCommand command = 2;
}

message msg_Segments {
    repeated msg_MotionSample segments = 1;
}

message msg_ControlPlan{
    required double startTime = 1;
    required double endTime = 2;
    required msg_MotionSample sample = 3;
    required msg_VehicleState startState = 4;
    required msg_VehicleState endState = 5;
    required int32 startSampleIndex = 6;
    required int32 startSegmentIndex = 7;
    required int32 endSampleIndex = 8;
    required int32 endSegmentIndex = 9;
}

message msg_ImuLog{
    required double systemTime = 1;
    required double deviceTime = 2;
    required msg_Matrix accel = 3;
    required msg_Matrix gyro = 4;
}

message msg_ViconLog{
    required double systemTime = 1;
    required double deviceTime = 2;
    required msg_Matrix pose_7d = 3;
}

message msg_Log {
    required double timestamp = 1;
    optional msg_VehicleState vehicleState = 2;
    optional msg_ControlCommand controlCommand = 3;
    optional msg_ControlPlan controlPlan = 4;
    optional msg_Segments segments = 5;
    optional msg_ImuLog imu = 6;
    optional msg_ViconLog vicon = 7;
}
